mako.createloader(io)

-- Load the Lua Debugger Monitor "ldbgmon" and call the connect() method
--require"ldbgmon".connect{
--   -- host="192.168.1.100", -- Default value: "localhost"
--   -- port = 8888,  -- Default value: 4711
--   -- stop=true, -- Default value: false. Can also stop via launch.json: "stopOnEntry": true,
--   -- retry=10, -- Default value: infinite. Try connecting to debugger this many times
--   restartonmod=true, -- Default value: false. Auto restart server on file change
--}
--trace"The debugger should stop the program on this line"

trace("Starting opcua server")
local ua = require("opcua.api")
local conf = require("loadconf")

local function DemoAddon(services)
  local code = require("add_variables")(services, ua.NodeIds.ObjectsFolder)
  return code
end

-- Connect logging traces
local sock = require("socket")
ua.Log.D = function(msg)
  trace(sock.gettime(), "[DBG] ", msg)
end

ua.Log.I = function(msg)
  trace(sock.gettime(), "[INF]", msg)
end

ua.Log.E = function(msg)
  trace(sock.gettime(), "[ERR]", msg)
end


uaServer = ua.NewServer(conf.opcua)
uaServer:Initialize(DemoAddon)
uaServer:Run()

assert(uaServer.Services ~= nil)

UaClient = io:dofile(".lua/lspclient.lua").New(uaServer.Services)

